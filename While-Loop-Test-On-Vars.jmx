<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="While Loop Test On Vars" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">0</stringProp>
        <longProp name="ThreadGroup.start_time">1370726934000</longProp>
        <longProp name="ThreadGroup.end_time">1370726934000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables - define array" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="ids_1" elementType="Argument">
              <stringProp name="Argument.name">ids_1</stringProp>
              <stringProp name="Argument.value">alpha</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ids_2" elementType="Argument">
              <stringProp name="Argument.name">ids_2</stringProp>
              <stringProp name="Argument.value">beta</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ids_3" elementType="Argument">
              <stringProp name="Argument.name">ids_3</stringProp>
              <stringProp name="Argument.value">gamma</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="ids_matchNr" elementType="Argument">
              <stringProp name="Argument.name">ids_matchNr</stringProp>
              <stringProp name="Argument.value">3</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 Sampler - init loop with 1st id" enabled="true">
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="script">int counter = 1;
vars.put(&quot;counter&quot;, &quot;1&quot;);

String ids_matchNr = vars.get(&quot;ids_matchNr&quot;);
if (ids_matchNr != null) {
	String nextId = vars.get(&quot;ids_&quot; + counter);
	log.info(&quot;- - - - ids_matchNr is &quot; + ids_matchNr);
	log.info(&quot;- - - - put id &quot; + nextId);
	vars.put(&quot;id&quot;, nextId);
} else {
	log.error(&quot;- - - - ids_matchNr is null!&quot;);
	vars.put(&quot;id&quot;, null);
}</stringProp>
          <stringProp name="scriptLanguage">groovy</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <WhileController guiclass="WhileControllerGui" testclass="WhileController" testname="While - id exists" enabled="true">
          <stringProp name="WhileController.condition">${__groovy(vars.get(&quot;id&quot;) != null)}</stringProp>
        </WhileController>
        <hashTree>
          <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor - next id" enabled="true">
            <stringProp name="scriptLanguage">groovy</stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="script">log.info(&quot;- - - - counter: &quot; + vars.get(&quot;counter&quot;));
int counter = Integer.parseInt(vars.get(&quot;counter&quot;));

String id = vars.get(&quot;ids_&quot; + counter);
log.info(&quot;- - - - id: &quot; + id);
vars.put(&quot;id&quot;, id);

vars.put(&quot;counter&quot;, &quot;&quot; + (++counter));</stringProp>
          </JSR223PreProcessor>
          <hashTree/>
          <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action - pause" enabled="true">
            <intProp name="ActionProcessor.action">1</intProp>
            <intProp name="ActionProcessor.target">0</intProp>
            <stringProp name="ActionProcessor.duration">300</stringProp>
          </TestAction>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
